2020-09-11 13:32:59 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "CREATE TABLE TRANSACTION (ID BIGINT GENERATED BY DEFAULT AS IDENTITY, AMOUNT DOUBLE NOT NULL, FROM[*] BIGINT NOT NULL, TO BIGINT NOT NULL, PRIMARY KEY (ID))"; expected "identifier"; SQL statement:
create table transaction (id bigint generated by default as identity, amount double not null, from bigint not null, to bigint not null, primary key (id)) [42001-200]
2020-09-11 13:33:39 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "CREATE TABLE TRANSACTION (ID BIGINT GENERATED BY DEFAULT AS IDENTITY, AMOUNT DOUBLE NOT NULL, FROM[*] BIGINT NOT NULL, TO BIGINT NOT NULL, PRIMARY KEY (ID))"; expected "identifier"; SQL statement:
create table transaction (id bigint generated by default as identity, amount double not null, from bigint not null, to bigint not null, primary key (id)) [42001-200]
2020-09-11 13:37:11 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "CREATE TABLE TRANSACTION (ID BIGINT GENERATED BY DEFAULT AS IDENTITY, AMOUNT DOUBLE NOT NULL, FROM[*] BIGINT NOT NULL, TO BIGINT NOT NULL, PRIMARY KEY (ID))"; expected "identifier"; SQL statement:
create table transaction (id bigint generated by default as identity, amount double not null, from bigint not null, to bigint not null, primary key (id)) [42001-200]
2020-09-11 13:37:15 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "CREATE TABLE TRANSACTION (ID BIGINT GENERATED BY DEFAULT AS IDENTITY, AMOUNT DOUBLE NOT NULL, FROM[*] BIGINT NOT NULL, TO BIGINT NOT NULL, PRIMARY KEY (ID))"; expected "identifier"; SQL statement:
create table transaction (id bigint generated by default as identity, amount double not null, from bigint not null, to bigint not null, primary key (id)) [42001-200]
2020-09-11 13:37:19 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "CREATE TABLE TRANSACTION (ID BIGINT GENERATED BY DEFAULT AS IDENTITY, AMOUNT DOUBLE NOT NULL, FROM[*] BIGINT NOT NULL, TO BIGINT NOT NULL, PRIMARY KEY (ID))"; expected "identifier"; SQL statement:
create table transaction (id bigint generated by default as identity, amount double not null, from bigint not null, to bigint not null, primary key (id)) [42001-200]
2020-09-11 13:38:51 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "CREATE TABLE TRANSACTION (ID BIGINT GENERATED BY DEFAULT AS IDENTITY, AMOUNT DOUBLE NOT NULL, FROM[*] BIGINT NOT NULL, TO BIGINT NOT NULL, PRIMARY KEY (ID))"; expected "identifier"; SQL statement:
create table transaction (id bigint generated by default as identity, amount double not null, from bigint not null, to bigint not null, primary key (id)) [42001-200]
2020-09-11 13:38:53 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "CREATE TABLE TRANSACTION (ID BIGINT GENERATED BY DEFAULT AS IDENTITY, AMOUNT DOUBLE NOT NULL, FROM[*] BIGINT NOT NULL, TO BIGINT NOT NULL, PRIMARY KEY (ID))"; expected "identifier"; SQL statement:
create table transaction (id bigint generated by default as identity, amount double not null, from bigint not null, to bigint not null, primary key (id)) [42001-200]
2020-09-11 13:40:44 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "CREATE TABLE TRANSACTION (ID BIGINT GENERATED BY DEFAULT AS IDENTITY, AMOUNT DOUBLE NOT NULL, FROM[*] BIGINT NOT NULL, TO BIGINT NOT NULL, PRIMARY KEY (ID))"; expected "identifier"; SQL statement:
create table transaction (id bigint generated by default as identity, amount double not null, from bigint not null, to bigint not null, primary key (id)) [42001-200]
2020-09-11 13:40:49 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "CREATE TABLE TRANSACTION (ID BIGINT GENERATED BY DEFAULT AS IDENTITY, AMOUNT DOUBLE NOT NULL, FROM[*] BIGINT NOT NULL, TO BIGINT NOT NULL, PRIMARY KEY (ID))"; expected "identifier"; SQL statement:
create table transaction (id bigint generated by default as identity, amount double not null, from bigint not null, to bigint not null, primary key (id)) [42001-200]
2020-09-11 13:40:53 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "CREATE TABLE TRANSACTION (ID BIGINT GENERATED BY DEFAULT AS IDENTITY, AMOUNT DOUBLE NOT NULL, FROM[*] BIGINT NOT NULL, TO BIGINT NOT NULL, PRIMARY KEY (ID))"; expected "identifier"; SQL statement:
create table transaction (id bigint generated by default as identity, amount double not null, from bigint not null, to bigint not null, primary key (id)) [42001-200]
2020-09-11 13:40:56 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "CREATE TABLE TRANSACTION (ID BIGINT GENERATED BY DEFAULT AS IDENTITY, AMOUNT DOUBLE NOT NULL, FROM[*] BIGINT NOT NULL, TO BIGINT NOT NULL, PRIMARY KEY (ID))"; expected "identifier"; SQL statement:
create table transaction (id bigint generated by default as identity, amount double not null, from bigint not null, to bigint not null, primary key (id)) [42001-200]
2020-09-11 13:41:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "CREATE TABLE TRANSACTION (ID BIGINT GENERATED BY DEFAULT AS IDENTITY, AMOUNT DOUBLE NOT NULL, FROM[*] BIGINT NOT NULL, TO BIGINT NOT NULL, PRIMARY KEY (ID))"; expected "identifier"; SQL statement:
create table transaction (id bigint generated by default as identity, amount double not null, from bigint not null, to bigint not null, primary key (id)) [42001-200]
2020-09-11 13:41:03 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "CREATE TABLE TRANSACTION (ID BIGINT GENERATED BY DEFAULT AS IDENTITY, AMOUNT DOUBLE NOT NULL, FROM[*] BIGINT NOT NULL, TO BIGINT NOT NULL, PRIMARY KEY (ID))"; expected "identifier"; SQL statement:
create table transaction (id bigint generated by default as identity, amount double not null, from bigint not null, to bigint not null, primary key (id)) [42001-200]
2020-09-11 13:41:08 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "CREATE TABLE TRANSACTION (ID BIGINT GENERATED BY DEFAULT AS IDENTITY, AMOUNT DOUBLE NOT NULL, FROM[*] BIGINT NOT NULL, TO BIGINT NOT NULL, PRIMARY KEY (ID))"; expected "identifier"; SQL statement:
create table transaction (id bigint generated by default as identity, amount double not null, from bigint not null, to bigint not null, primary key (id)) [42001-200]
2020-09-11 13:41:11 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "CREATE TABLE TRANSACTION (ID BIGINT GENERATED BY DEFAULT AS IDENTITY, AMOUNT DOUBLE NOT NULL, FROM[*] BIGINT NOT NULL, TO BIGINT NOT NULL, PRIMARY KEY (ID))"; expected "identifier"; SQL statement:
create table transaction (id bigint generated by default as identity, amount double not null, from bigint not null, to bigint not null, primary key (id)) [42001-200]
2020-09-11 13:41:21 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "CREATE TABLE TRANSACTION (ID BIGINT GENERATED BY DEFAULT AS IDENTITY, AMOUNT DOUBLE NOT NULL, FROM[*] BIGINT NOT NULL, TO BIGINT NOT NULL, PRIMARY KEY (ID))"; expected "identifier"; SQL statement:
create table transaction (id bigint generated by default as identity, amount double not null, from bigint not null, to bigint not null, primary key (id)) [42001-200]
2020-09-11 13:41:29 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "CREATE TABLE TRANSACTION (ID BIGINT GENERATED BY DEFAULT AS IDENTITY, AMOUNT DOUBLE NOT NULL, FROM[*] BIGINT NOT NULL, TO BIGINT NOT NULL, PRIMARY KEY (ID))"; expected "identifier"; SQL statement:
create table transaction (id bigint generated by default as identity, amount double not null, from bigint not null, to bigint not null, primary key (id)) [42001-200]
2020-09-11 13:41:31 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "CREATE TABLE TRANSACTION (ID BIGINT GENERATED BY DEFAULT AS IDENTITY, AMOUNT DOUBLE NOT NULL, FROM[*] BIGINT NOT NULL, TO BIGINT NOT NULL, PRIMARY KEY (ID))"; expected "identifier"; SQL statement:
create table transaction (id bigint generated by default as identity, amount double not null, from bigint not null, to bigint not null, primary key (id)) [42001-200]
2020-09-11 13:42:15 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "CREATE TABLE TRANSACTION (ID BIGINT GENERATED BY DEFAULT AS IDENTITY, AMOUNT DOUBLE NOT NULL, FROM[*] BIGINT NOT NULL, TO BIGINT NOT NULL, PRIMARY KEY (ID))"; expected "identifier"; SQL statement:
create table transaction (id bigint generated by default as identity, amount double not null, from bigint not null, to bigint not null, primary key (id)) [42001-200]
2020-09-11 13:42:21 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "CREATE TABLE TRANSACTION (ID BIGINT GENERATED BY DEFAULT AS IDENTITY, AMOUNT DOUBLE NOT NULL, FROM[*] BIGINT NOT NULL, TO BIGINT NOT NULL, PRIMARY KEY (ID))"; expected "identifier"; SQL statement:
create table transaction (id bigint generated by default as identity, amount double not null, from bigint not null, to bigint not null, primary key (id)) [42001-200]
2020-09-11 13:43:19 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "CREATE TABLE TRANSACTION (ID BIGINT GENERATED BY DEFAULT AS IDENTITY, AMOUNT DOUBLE NOT NULL, FROM[*] BIGINT NOT NULL, TO BIGINT NOT NULL, PRIMARY KEY (ID))"; expected "identifier"; SQL statement:
create table transaction (id bigint generated by default as identity, amount double not null, from bigint not null, to bigint not null, primary key (id)) [42001-200]
2020-09-11 13:44:31 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "CREATE TABLE TRANSACTION (ID BIGINT GENERATED BY DEFAULT AS IDENTITY, AMOUNT DOUBLE NOT NULL, FROM[*] BIGINT NOT NULL, TO BIGINT NOT NULL, PRIMARY KEY (ID))"; expected "identifier"; SQL statement:
create table transaction (id bigint generated by default as identity, amount double not null, from bigint not null, to bigint not null, primary key (id)) [42001-200]
2020-09-11 13:45:35 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "CREATE TABLE TRANSACTION (ID BIGINT GENERATED BY DEFAULT AS IDENTITY, AMOUNT DOUBLE NOT NULL, FROM[*] BIGINT NOT NULL, TO BIGINT NOT NULL, PRIMARY KEY (ID))"; expected "identifier"; SQL statement:
create table transaction (id bigint generated by default as identity, amount double not null, from bigint not null, to bigint not null, primary key (id)) [42001-200]
2020-09-11 13:45:44 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "CREATE TABLE TRANSACTION (ID BIGINT GENERATED BY DEFAULT AS IDENTITY, AMOUNT DOUBLE NOT NULL, FROM[*] BIGINT NOT NULL, TO BIGINT NOT NULL, PRIMARY KEY (ID))"; expected "identifier"; SQL statement:
create table transaction (id bigint generated by default as identity, amount double not null, from bigint not null, to bigint not null, primary key (id)) [42001-200]
2020-09-11 13:47:46 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "SELECT TRANSACTIO0_.ID AS ID1_4_, TRANSACTIO0_.AMOUNT AS AMOUNT2_4_, TRANSACTIO0_.FROM[*] AS FROM3_4_, TRANSACTIO0_.TO AS TO4_4_ FROM TRANSACTION TRANSACTIO0_"; expected "identifier"; SQL statement:
select transactio0_.id as id1_4_, transactio0_.amount as amount2_4_, transactio0_.from as from3_4_, transactio0_.to as to4_4_ from transaction transactio0_ [42001-200]
2020-09-11 13:48:39 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "CREATE TABLE TRANSACTION (ID BIGINT GENERATED BY DEFAULT AS IDENTITY, AMOUNT DOUBLE NOT NULL, FROM[*] BIGINT NOT NULL, TO BIGINT NOT NULL, PRIMARY KEY (ID))"; expected "identifier"; SQL statement:
create table transaction (id bigint generated by default as identity, amount double not null, from bigint not null, to bigint not null, primary key (id)) [42001-200]
2020-09-11 13:49:04 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "CREATE TABLE TRANSACTION (ID BIGINT GENERATED BY DEFAULT AS IDENTITY, AMOUNT DOUBLE NOT NULL, FROM[*] BIGINT NOT NULL, TO BIGINT NOT NULL, PRIMARY KEY (ID))"; expected "identifier"; SQL statement:
create table transaction (id bigint generated by default as identity, amount double not null, from bigint not null, to bigint not null, primary key (id)) [42001-200]
2020-09-11 13:49:09 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "CREATE TABLE TRANSACTION (ID BIGINT GENERATED BY DEFAULT AS IDENTITY, AMOUNT DOUBLE NOT NULL, FROM[*] BIGINT NOT NULL, TO BIGINT NOT NULL, PRIMARY KEY (ID))"; expected "identifier"; SQL statement:
create table transaction (id bigint generated by default as identity, amount double not null, from bigint not null, to bigint not null, primary key (id)) [42001-200]
2020-09-11 13:49:12 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "CREATE TABLE TRANSACTION (ID BIGINT GENERATED BY DEFAULT AS IDENTITY, AMOUNT DOUBLE NOT NULL, FROM[*] BIGINT NOT NULL, TO BIGINT NOT NULL, PRIMARY KEY (ID))"; expected "identifier"; SQL statement:
create table transaction (id bigint generated by default as identity, amount double not null, from bigint not null, to bigint not null, primary key (id)) [42001-200]
2020-09-11 13:49:14 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "SELECT TRANSACTIO0_.ID AS ID1_4_, TRANSACTIO0_.AMOUNT AS AMOUNT2_4_, TRANSACTIO0_.FROM[*] AS FROM3_4_, TRANSACTIO0_.TO AS TO4_4_ FROM TRANSACTION TRANSACTIO0_"; expected "identifier"; SQL statement:
select transactio0_.id as id1_4_, transactio0_.amount as amount2_4_, transactio0_.from as from3_4_, transactio0_.to as to4_4_ from transaction transactio0_ [42001-200]
2020-09-11 13:49:22 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "SELECT TRANSACTIO0_.ID AS ID1_4_, TRANSACTIO0_.AMOUNT AS AMOUNT2_4_, TRANSACTIO0_.FROM[*] AS FROM3_4_, TRANSACTIO0_.TO AS TO4_4_ FROM TRANSACTION TRANSACTIO0_"; expected "identifier"; SQL statement:
select transactio0_.id as id1_4_, transactio0_.amount as amount2_4_, transactio0_.from as from3_4_, transactio0_.to as to4_4_ from transaction transactio0_ [42001-200]
2020-09-11 13:50:43 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "SELECT TRANSACTIO0_.ID AS ID1_4_, TRANSACTIO0_.AMOUNT AS AMOUNT2_4_, TRANSACTIO0_.FROM[*] AS FROM3_4_, TRANSACTIO0_.TO AS TO4_4_ FROM TRANSACTION TRANSACTIO0_"; expected "identifier"; SQL statement:
select transactio0_.id as id1_4_, transactio0_.amount as amount2_4_, transactio0_.from as from3_4_, transactio0_.to as to4_4_ from transaction transactio0_ [42001-200]
2020-09-11 13:51:03 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "SELECT TRANSACTIO0_.ID AS ID1_4_, TRANSACTIO0_.AMOUNT AS AMOUNT2_4_, TRANSACTIO0_.FROM[*] AS FROM3_4_, TRANSACTIO0_.TO AS TO4_4_ FROM TRANSACTION TRANSACTIO0_"; expected "identifier"; SQL statement:
select transactio0_.id as id1_4_, transactio0_.amount as amount2_4_, transactio0_.from as from3_4_, transactio0_.to as to4_4_ from transaction transactio0_ [42001-200]
2020-09-11 13:52:42 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "CREATE TABLE TRANS (ID BIGINT GENERATED BY DEFAULT AS IDENTITY, AMOUNT DOUBLE NOT NULL, FROM[*] BIGINT NOT NULL, TO BIGINT NOT NULL, PRIMARY KEY (ID))"; expected "identifier"; SQL statement:
create table trans (id bigint generated by default as identity, amount double not null, from bigint not null, to bigint not null, primary key (id)) [42001-200]
2020-09-11 13:52:51 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "CREATE TABLE TRANS (ID BIGINT GENERATED BY DEFAULT AS IDENTITY, AMOUNT DOUBLE NOT NULL, FROM[*] BIGINT NOT NULL, TO BIGINT NOT NULL, PRIMARY KEY (ID))"; expected "identifier"; SQL statement:
create table trans (id bigint generated by default as identity, amount double not null, from bigint not null, to bigint not null, primary key (id)) [42001-200]
2020-09-11 13:53:21 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "SELECT TRANS0_.ID AS ID1_4_, TRANS0_.AMOUNT AS AMOUNT2_4_, TRANS0_.FROM[*] AS FROM3_4_, TRANS0_.TO AS TO4_4_ FROM TRANS TRANS0_"; expected "identifier"; SQL statement:
select trans0_.id as id1_4_, trans0_.amount as amount2_4_, trans0_.from as from3_4_, trans0_.to as to4_4_ from trans trans0_ [42001-200]
2020-09-11 13:55:13 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "CREATE TABLE TRANS (ID BIGINT GENERATED BY DEFAULT AS IDENTITY, AMOUNT DOUBLE NOT NULL, FROM[*] BIGINT NOT NULL, TO BIGINT NOT NULL, PRIMARY KEY (ID))"; expected "identifier"; SQL statement:
create table trans (id bigint generated by default as identity, amount double not null, from bigint not null, to bigint not null, primary key (id)) [42001-200]
2020-09-11 13:55:52 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "CREATE TABLE TRANS (ID BIGINT GENERATED BY DEFAULT AS IDENTITY, AMOUNT DOUBLE NOT NULL, FROM[*] BIGINT NOT NULL, TO BIGINT NOT NULL, PRIMARY KEY (ID))"; expected "identifier"; SQL statement:
create table trans (id bigint generated by default as identity, amount double not null, from bigint not null, to bigint not null, primary key (id)) [42001-200]
2020-09-23 00:57:40 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "USER" not found; SQL statement:
insert into user (id, authorities, password, username) values (null, ?, ?, ?) [42102-200]
2020-09-23 00:57:58 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "USER" not found; SQL statement:
insert into user (id, authorities, password, username) values (null, ?, ?, ?) [42102-200]
2020-09-23 00:59:11 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "USER" not found; SQL statement:
insert into user (id, authorities, password, username) values (null, ?, ?, ?) [42102-200]
2020-09-23 00:59:23 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "USER" not found; SQL statement:
insert into user (id, authorities, password, username) values (null, ?, ?, ?) [42102-200]
2020-09-23 01:00:54 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "USER" not found; SQL statement:
insert into user (id, authorities, password, username) values (null, ?, ?, ?) [42102-200]
2020-09-23 14:13:12 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Column "Admin_A" not found; SQL statement:
SELECT * FROM USER  WHERE USERNAME = "Admin_A" [42122-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:453)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.expression.ExpressionColumn.getColumnException(ExpressionColumn.java:163)
	at org.h2.expression.ExpressionColumn.optimize(ExpressionColumn.java:145)
	at org.h2.expression.condition.Comparison.optimize(Comparison.java:191)
	at org.h2.command.dml.Select.prepare(Select.java:1209)
	at org.h2.command.Parser.prepareCommand(Parser.java:744)
	at org.h2.engine.Session.prepareLocal(Session.java:657)
	at org.h2.engine.Session.prepareCommand(Session.java:595)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1235)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:212)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:201)
	at org.h2.server.web.WebApp.getResult(WebApp.java:1459)
	at org.h2.server.web.WebApp.query(WebApp.java:1116)
	at org.h2.server.web.WebApp.query(WebApp.java:1092)
	at org.h2.server.web.WebApp.process(WebApp.java:241)
	at org.h2.server.web.WebApp.processRequest(WebApp.java:173)
	at org.h2.server.web.WebServlet.doGet(WebServlet.java:129)
	at org.h2.server.web.WebServlet.doPost(WebServlet.java:166)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:118)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:158)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:155)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at csd.api.modules.security.JWTAuthorizationFilter.doFilterInternal(JWTAuthorizationFilter.java:44)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:835)
2020-09-23 14:13:19 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Column "Admin_1" not found; SQL statement:
SELECT * FROM USER  WHERE USERNAME = "Admin_1" [42122-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:453)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.expression.ExpressionColumn.getColumnException(ExpressionColumn.java:163)
	at org.h2.expression.ExpressionColumn.optimize(ExpressionColumn.java:145)
	at org.h2.expression.condition.Comparison.optimize(Comparison.java:191)
	at org.h2.command.dml.Select.prepare(Select.java:1209)
	at org.h2.command.Parser.prepareCommand(Parser.java:744)
	at org.h2.engine.Session.prepareLocal(Session.java:657)
	at org.h2.engine.Session.prepareCommand(Session.java:595)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1235)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:212)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:201)
	at org.h2.server.web.WebApp.getResult(WebApp.java:1459)
	at org.h2.server.web.WebApp.query(WebApp.java:1116)
	at org.h2.server.web.WebApp.query(WebApp.java:1092)
	at org.h2.server.web.WebApp.process(WebApp.java:241)
	at org.h2.server.web.WebApp.processRequest(WebApp.java:173)
	at org.h2.server.web.WebServlet.doGet(WebServlet.java:129)
	at org.h2.server.web.WebServlet.doPost(WebServlet.java:166)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:118)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:158)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:155)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at csd.api.modules.security.JWTAuthorizationFilter.doFilterInternal(JWTAuthorizationFilter.java:44)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:835)
